#lang rhombus

import: "../image.rhm" open
        "../universe.rhm" open

def background = rectangle(956,400,255,"black")

// 2htdp takes the string, it splits it up into individual letters and horizontally
// appends them // do baseline with beside
// the main issue arises when we're using text
//text size is different when comparing rhombus and racket htdp
fun star_wars(x):
  cond
  | x < 50: overlay(above(text("STAR",100 - (2 * x),"yellow"),text("WARS",100 - (2 * x),"yellow")),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background

// animate(star_wars)

fun star_wars_c(x):
  cond
  | x < 100: overlay(circle(200-(2*x),255,"yellow"),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background

// animate (star_wars_c)

fun star_wars_s(x):
  cond
  | x < 100: overlay(square(200-(2*x),255,"yellow"),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background

// animate (star_wars_s)

fun star_wars_r(x):
  cond
  | x < 100: overlay(rectangle(200-(2*x),200-(1*x),255,"yellow"),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background

// animate (star_wars_r)

fun star_wars_rhm(x):
  cond
  | x < 100: overlay(rhombus(200-(2*x),x-x/3,255,"yellow"),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background
// animate (star_wars_rhm)

fun star_wars_el(x):
  cond
  | x < 100: overlay(ellipse(200-(2*x),100-(x/2),255,"yellow"),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background
//animate (star_wars_el)

fun star_wars_t(x):
  cond
  | x < 100: overlay(triangle(200-(2*x),255,"yellow"),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background
// animate (star_wars_t)

fun star_wars_st(x):
  cond
  | x < 100: overlay(star(200-(2*x),255,"yellow"),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background
// animate (star_wars_st)

fun star_wars_l(x):
  cond
  | x < 100: overlay(line(200,200-(2*x),"yellow"),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background
// animate (star_wars_l)

fun star_wars_tx(x):
  cond
  | x < 100: overlay(above(text("A",200 - (2 * x),"yellow"),text("U",200 - (2 * x),"yellow")),background).clip()
  //| x < 100: overlay(text("A",200-(2*x),"yellow"),background)
  //| x < 100: overlay(above(text("STAR",200 - (2 * x),"yellow"),text("WARS",200 - (2 * x),"yellow")),background).clip()
  | ~else: background
//animate (star_wars_tx)

above(text("STAR",200,"yellow"),text("WARS",200,"yellow")).width
above(text("STAR",200,"yellow"),text("WARS",200,"yellow")).height

text("STAR",200,"yellow").width
text("A",2,"yellow").height